name: .NET Build & Test + Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore src/ProyectoBase/ProyectoBase.sln

    - name: Build
      run: dotnet build src/ProyectoBase/ProyectoBase.sln --no-restore --configuration Release

    - name: Run Tests with Coverage
      run: dotnet test src/ProyectoBase/ProyectoBase.sln --no-build --configuration Release --collect:"XPlat Code Coverage"

    - name: Display coverage files (debug)
      run: ls src/ProyectoBase.Tests/TestResults/**

    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Opcional si tu repo es p√∫blico
        files: src/ProyectoBase.Tests/TestResults/coverage.opencover.xml
        fail_ci_if_error: true

    - name: Generate Coverage Report
      run: |
        ~/.dotnet/tools/reportgenerator \
          -reports:src/ProyectoBase.Tests/TestResults/**/coverage.cobertura.xml \
          -targetdir:coveragereport \
          -reporttypes:HtmlInline_AzurePipelines


    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coveragereport
